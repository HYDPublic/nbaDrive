<?php

namespace FantasyBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * LeagueRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LeagueRepository extends \Doctrine\ORM\EntityRepository
{

	/* GET A LIST OF ALL THE LEAGUES / USING PAGINATION */
	public function getLeagues($page, $nbPerPage, $myleagues)
	{
		$query = $this->createQueryBuilder('l');

		if($myleagues) {
			foreach($myleagues as $ml)
				$ids[] = $ml->getId();
		 	$query->where($query->expr()->notIn('l.id', $ids));
		}

		$query
			->orderBy('l.name', 'ASC')
			->getQuery()
		;

		$query
			->setFirstResult( ($page-1) * $nbPerPage )
			->setMaxResults($nbPerPage)
		;

		return new Paginator($query, true);
	}


	/* GET LIST OF USER LEAGUES HE JOINED */
	public function getJoinedLeagues($user)
	{
		$query = $this->createQueryBuilder('l')
			->innerJoin('l.users', 'u')
			->where('u.id = :userId')
			->setParameter('userId',$user)
			->getQuery()
		;

		return $query->getResult();
	}

}
